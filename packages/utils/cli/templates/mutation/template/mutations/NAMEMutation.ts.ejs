import { MutationFunction, useQueryClient } from '@tanstack/react-query';
import { enterpriseApi } from '@novecirculos/api';
import { useMutation } from '@tanstack/react-query';
import { UseMutationWrapper } from '@novecirculos/query-utils';
import { <%= props.pascalCaseName %>Response } from '../interfaces/<%= props.pascalCaseName %>Response';
import { <%= props.pascalCaseName %>Data } from '../interfaces/<%= props.pascalCaseName %>Data';

export const <%= props.camelCaseName %>Mutation: MutationFunction<
  <%= props.pascalCaseName %>Response,
  <%= props.pascalCaseName %>Data
> = async ({ email }) => {
  const res = await Promise.all([
    await enterpriseApi.post(
      '/user/pw/request',
      {
        EmailAddress: email,
      },
      {
        headers: {
          'Access-Control-Allow-Origin': '*',
        },
      }
    ),
  ]);
  return res[0].data;
};

export const use<%= props.pascalCaseName %>Mutation: UseMutationWrapper<
<%= props.pascalCaseName %>Response,
  Error,
  <%= props.pascalCaseName %>Data
> = (options) => {
  const queryClient = useQueryClient();

  return useMutation(['<%= props.kebabCaseName %>'], <%= props.camelCaseName %>Mutation, {
    ...options,
    onSuccess: async (data) => {
      queryClient.setQueriesData(['<%= props.kebabCaseName %>'], data);
    },
  });
};